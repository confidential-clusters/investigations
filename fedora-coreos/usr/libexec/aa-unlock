#!/bin/bash

set -uo pipefail
# set -e
set -x

# Configuration
KBS_IP=$(ip route | awk '/^default/ {print $3}')
KBS_PORT="8080"
KBS_URL="http://${KBS_IP}:${KBS_PORT}"

# ROOT_DEVICE=/dev/$(dmsetup info --noheadings -c -o blkdevs_used "$(blkid -L root)")
ROOT_DEVICE="/dev/vda4"
CRYPT_ROOT_NAME="luks-root"

MAX_RETRY_ATTEMPTS=3
RETRY_DELAY=5

main() {
    echo "Starting remote attestation process"
    echo "Getting LUKS key for device: ${ROOT_DEVICE}"
    echo "trustee URL: ${KBS_URL}"

    local attempts=$MAX_RETRY_ATTEMPTS
    local count=0
    local result=""
    local status=0
    while [[ $count -lt $attempts ]] && [[ -z "$result" ]]; do
        echo "Remote Attestation: Attempt $((count+1))"

        result=$(trustee-attester --url "${KBS_URL}" get-resource --path default/rootdecrypt/key1 2>/dev/null)
        status=$?
        if [[ ${status} -ne 0 ]]; then
            echo "Remote Attestation: Failed with status: $status"
            sleep $RETRY_DELAY
        elif [[ -n "$result" ]]; then
            echo "Remote Attestation: Successfully retrieved LUKS key"
            break
        else
            echo "Remote Attestation: Empty response received"
            sleep $RETRY_DELAY
        fi
        count=$((count+1))
    done

    if [[ -z "$result" ]]; then
        echo "Remote Attestation: Failed to retrieve passphrase after $attempts attempts"
        exit 1
    fi

    passphrase=$(echo "$result" | base64 -d | tr -cd '[:print:]')

    echo "Unlocking LUKS device: ${ROOT_DEVICE}"
    echo -n $passphrase | cryptsetup --verbose open ${ROOT_DEVICE} ${CRYPT_ROOT_NAME} --key-file=-
    if [[ $? -ne 0 ]]; then
        echo "Failed to decrypt root filesystem"
        exit 1
    fi

    echo "Successfully decrypted root filesystem"
    exit 0
}

main "${@}"
