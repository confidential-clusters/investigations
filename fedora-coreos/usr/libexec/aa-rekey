#!/bin/bash

set -uo pipefail
# set -e
set -x

# Configuration
KBS_IP=$(ip route | awk '/^default/ {print $3}')
KBS_PORT="8080"
KBS_URL="http://${KBS_IP}:${KBS_PORT}"

# ROOT_DEVICE=/dev/$(dmsetup info --noheadings -c -o blkdevs_used "$(blkid -L root)")
ROOT_DEVICE="/dev/vda4"

MAX_RETRY_ATTEMPTS=3
RETRY_DELAY=5

main() {
    echo "Starting remote attestation process"
    echo "Getting LUKS key for device: ${ROOT_DEVICE}"
    echo "trustee URL: ${KBS_URL}"

    attempts=$MAX_RETRY_ATTEMPTS
    count=0
    result=""
    status=0
    while [[ $count -lt $attempts ]] && [[ -z "$result" ]]; do
        echo "Remote Attestation: Attempt $((count+1))"

        result=$(trustee-attester --url "${KBS_URL}" get-resource --path default/rootdecrypt/key1 2>/dev/null)
        status=$?
        if [[ ${status} -ne 0 ]]; then
            echo "Remote Attestation: Failed with status: $status"
            sleep $RETRY_DELAY
        elif [[ -n "$result" ]]; then
            echo "Remote Attestation: Successfully retrieved LUKS key"
            break
        else
            echo "Remote Attestation: Empty response received"
            sleep $RETRY_DELAY
        fi
        count=$((count+1))
    done

    if [[ -z "$result" ]]; then
        echo "Remote Attestation: Failed to retrieve passphrase after $attempts attempts"
        exit 1
    fi

    passphrase=$(echo "$result" | base64 -d | tr -cd '[:print:]')

    echo "Getting current LUKS key from Clevis"
    current_key=$(. /usr/bin/clevis-luks-common-functions && clevis_luks_unlock_device "${ROOT_DEVICE}")

    echo -n "${current_key}" | cryptsetup --verbose open --test-passphrase "${ROOT_DEVICE}" --key-file=-
    if [[ $? -ne 0 ]]; then
        echo "Failed to verify old key"
        exit 1
    fi

    keyfile="/tmp/current_key"
    echo -n "${current_key}" > "${keyfile}"

    echo "Replacing LUKS key"
    echo -n "${passphrase}" | cryptsetup --verbose luksChangeKey --key-file="${keyfile}" "${ROOT_DEVICE}" -
    if [[ $? -ne 0 ]]; then
        echo "Failed to replace LUKS key"
        exit 1
    fi

    rm "${keyfile}"

    echo "Verify new LUKS key"
    echo -n "${passphrase}" | cryptsetup --verbose open --test-passphrase "${ROOT_DEVICE}" --key-file=-
    if [[ $? -ne 0 ]]; then
        echo "Failed to verify new key"
        return 1
    fi

    echo "Removing LUKS token"
    cryptsetup token remove "${ROOT_DEVICE}" --token-id 0

    echo "LUKS key replacement completed successfully"
    exit 0
}

main "${@}"
